{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","Root.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","value","delete","Array","isArray","part","append","set","Pagination","total","_useSearchParams","useSearchParams","searchParams","perPage","Number","get","currentPage","pageCount","Math","ceil","firstPage","lastPage","handlePageChange","pageNumber","page","String","_jsxs","className","children","_jsx","classNames","disabled","Link","search","undefined","map","active","onClick","e","preventDefault","App","_useSearchParams2","setSearchParams","items","concat","indexOfLastItem","min","length","indexOfFirstItem","currentItems","slice","id","onChange","event","target","selectPerPage","htmlFor","item","Root","HashRouter","Routes","Route","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a34658f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getNumbers, getSearchWith } from '../../utils';\n\ntype Props = {\n  total: number,\n};\n\nexport const Pagination: React.FC<Props> = ({ total }) => {\n  const [searchParams] = useSearchParams();\n  const perPage = Number(searchParams.get('perPage')) || 5;\n  const currentPage = Number(searchParams.get('page')) || 1;\n  const pageCount = Math.ceil(total / perPage);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === pageCount;\n\n  const handlePageChange = (pageNumber: number) => {\n    return getSearchWith(searchParams, {\n      page: String(pageNumber) || null,\n    });\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: firstPage })}>\n        <Link\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={firstPage}\n          to={{\n            search: !firstPage ? handlePageChange(currentPage - 1) : undefined,\n          }}\n        >\n          «\n        </Link>\n      </li>\n\n      {getNumbers(1, pageCount).map((pageNumber) => (\n        <li\n          key={pageNumber}\n          className={classNames('page-item', {\n            active: pageNumber === currentPage,\n          })}\n        >\n          <Link\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            to={{\n              search:\n                currentPage !== pageNumber\n                  ? handlePageChange(pageNumber)\n                  : undefined,\n            }}\n            onClick={(e) => {\n              if (currentPage === pageNumber) {\n                e.preventDefault();\n              }\n            }}\n          >\n            {pageNumber}\n          </Link>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', { disabled: lastPage })}>\n        <Link\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={lastPage}\n          to={{\n            search: !lastPage ? handlePageChange(currentPage + 1) : undefined,\n          }}\n        >\n          »\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers, getSearchWith } from './utils';\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const perPage = Number(searchParams.get('perPage')) || 5;\n  const currentPage = Number(searchParams.get('page')) || 1;\n\n  const items = getNumbers(1, 42)\n    .map(n => `Item ${n}`);\n\n  const perPageArray = [3, 5, 10, 20];\n\n  const indexOfLastItem = Math.min(currentPage * perPage, items.length);\n  const indexOfFirstItem = (currentPage - 1) * perPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams, {\n        perPage: event.target.value || null,\n        page: '1' || null,\n      }),\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstItem + 1} - ${indexOfLastItem}) of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            {perPageArray.map((selectPerPage) => (\n              <option key={selectPerPage} value={selectPerPage}>\n                {selectPerPage}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination total={items.length} />\n\n      <ul>\n        {currentItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  HashRouter,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />} />\n    </Routes>\n\n  </HashRouter>\n);\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}